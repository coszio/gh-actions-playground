name: Rust Tests

on:
  push:
    branches: [ main, dev ]
  pull_request:
    branches: [ '**' ]

env:
  CARGO_TERM_COLOR: always

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ ubuntu-latest, windows-latest ]

    steps:
    - name: Install minimal stable
      uses: dtolnay/rust-toolchain@stable 
    - uses: actions/checkout@v3
    - uses: Swatinem/rust-cache@v2
    - name: Install Protoc
      uses: arduino/setup-protoc@v1
      with:
        repo-token: ${{ secrets.GITHUB_TOKEN }}
    - name: Install nextest
      uses: taiki-e/install-action@nextest
    - name: Build and run tests
      id: nextest
      # Profile "ci" is configured in .config/nextest.toml
      run: |
        cargo nextest run --workspace --profile ci
    - name: Catch flaky tests
      id: get_flaky_tests
      uses: mikefarah/yq@master
      with:
        cmd: yq -p=xml '.testsuites.testsuite.testcase.[] | select(. | has("flakyFailure"))' target/nextest/ci/junit.xml -oy
    - name: Reuse a variable obtained in another step
      run: echo ${{ steps.get_flaky_tests.outputs.result }}
    
    # - name: Create issue for flaky tests
    #   if: ${{ contains(steps.process-output.outputs.last-line, 'FLAKY') }}
    #   uses: JasonEtco/create-an-issue@v2
    #   env:
    #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    #     TEST_NAME: ${{ steps.process-output.outputs.last-line-last-item }}
    #     OS: ${{ matrix.os }}
    #   with:
    #     filename: .github/ISSUE_TEMPLATE/flaky_test_report.md
    #     update_existing: true
        

