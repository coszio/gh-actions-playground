name: Rust Tests

on:
  push:
    branches: [ main, dev ]
  pull_request:
    branches: [ '**' ]

env:
  CARGO_TERM_COLOR: always

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ ubuntu-latest, windows-latest ]

    steps:
    - name: Install minimal stable
      uses: dtolnay/rust-toolchain@stable 
    - uses: actions/checkout@v3
    - uses: Swatinem/rust-cache@v2
    - name: Install Protoc
      uses: arduino/setup-protoc@v1
      with:
        repo-token: ${{ secrets.GITHUB_TOKEN }}
    - name: Install nextest
      uses: taiki-e/install-action@nextest
    - name: Build and run tests
      id: nextest
      # Profile "ci" is configured in .config/nextest.toml
      run: |
        cargo nextest run --workspace --profile ci
    - name: Catch flaky tests
      id: get-flaky-tests
      run: |
          pip install python-yq
          xq '.testsuites.testsuite.testcase[] | select(. | has("flakyFailure"))' target/nextest/ci/junit.xml > flaky_tests.json
          echo has_flaky_tests=$(jq '. | has("flakyFailure")' flaky_tests.json) >> $GITHUB_OUTPUT
          echo test=$(yq '.+@name' flaky_tests.yml -r) >> $GITHUB_OUTPUT
          echo content=$(jq '.flakyFailure[0] | .["system-err"]' flaky_tests.json -r) >> $GITHUB_OUTPUT
          
    - name: Create issue for flaky tests
      if: ${{ steps.get-flaky-tests.outputs.has_flaky_tests == 'true' }}
      uses: JasonEtco/create-an-issue@v2
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        TEST_NAME: ${{ steps.get-flaky-tests.outputs.test }}
        SYSTEM_ERR: ${{ steps.get-flaky-tests.outputs.content }}
        OS: ${{ matrix.os }}
      with:
        filename: .github/ISSUE_TEMPLATE/flaky_test_report.md
        update_existing: true
        

